<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>It Fool - 前端小白</title>
  
  <subtitle>前端blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.itfool.cn/"/>
  <updated>2020-05-20T08:02:44.773Z</updated>
  <id>http://www.itfool.cn/</id>
  
  <author>
    <name>董冬懂冻</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS-Day01</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/css-day01/"/>
    <id>http://www.itfool.cn/前端笔记/css-day01/</id>
    <published>2020-05-20T08:02:20.000Z</published>
    <updated>2020-05-20T08:02:44.773Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.CSS初识</p></blockquote><h1 id="CSS层叠样式表"><a href="#CSS层叠样式表" class="headerlink" title="CSS层叠样式表"></a>CSS层叠样式表</h1><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul><li>理解<ul><li>css的目的作用</li><li>css的三种引入方式</li></ul></li><li>应用<ul><li>css三种引用方式的书写</li><li>通过样式规则给标签添加简单的样式</li></ul></li></ul><p><img src="/前端笔记/css-day01/zong1.jpg" alt></p><h1 id="1-HTML的局限性"><a href="#1-HTML的局限性" class="headerlink" title="1.HTML的局限性"></a>1.HTML的局限性</h1><p>说起HTML，这其实是个非常单纯的家伙， 他只关注内容的语义， </p><p>比如</p><h1>表明这是一个大标题，用<p> 表明这是一个段落，用<img> 表明这儿有一个图片， 用<a> 表示此处有链接。</a></p><p>很早的时候，世界上的网站虽然很多，但是他们都有一个共同的特点： <strong>丑</strong>。</p><p>这个是一个外国比较早的购物网站</p><p> <img src="/前端笔记/css-day01/640.webp" alt></p><p>有些人就忍受不了了，你就不能把自己打扮得漂亮一点吗？</p><p>HTML说，我试试…</p><p>如果要改变下 高度或者变一个颜色，就需要大量重复操作</p><p> <img src="/前端笔记/css-day01/css.png" alt></p><p><strong>总结：</strong></p><ul><li>HTML满足不了设计者的需求</li><li>操作html属性不方便</li><li>HTML里面添加样式带来的是无尽的臃肿和繁琐</li></ul><h1 id="2-CSS-网页的美容师"><a href="#2-CSS-网页的美容师" class="headerlink" title="2.CSS 网页的美容师"></a>2.CSS 网页的美容师</h1><ul><li>让我们的网页更加丰富多彩，布局更加灵活自如。   </li><li>CSS的最大贡献就是：  让 HTML 从样式中脱离，  实现了 HTML 专注去做 结构呈现，样式交给css </li></ul><blockquote><p><strong>我们理想中的结果： 结构(html)与样式(css)相分离</strong>  这句话要记住</p></blockquote><p>而且。。。。。 CSS 做的很出色，如果JavaScript是网页的魔法师，那么CSS它是我们网页的美容师，不信，你看:</p><p> <img src="/前端笔记/css-day01/baby.jpeg" alt></p><h1 id="3-CSS初识"><a href="#3-CSS初识" class="headerlink" title="3.CSS初识"></a>3.CSS初识</h1><ul><li><p>概念：</p><p>​    CSS(Cascading Style Sheets)  ，通常称为CSS样式表或层叠样式表（级联样式表）</p></li><li><p>作用：</p><ul><li>主要用于<strong>设置</strong> HTML页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及<strong>版面的布局和外观显示样式。</strong></li><li>CSS以HTML为基础，提供了丰富的功能，如字体、颜色、背景的控制及整体排版等，而且还可以针对不同的浏览器设置不同的样式。</li></ul></li></ul><h1 id="4-引入CSS样式表（书写位置）"><a href="#4-引入CSS样式表（书写位置）" class="headerlink" title="4. 引入CSS样式表（书写位置）"></a>4. 引入CSS样式表（书写位置）</h1><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">要书写css样式，那css样式书写的位置在哪呢？</span><br></pre></td></tr></table></figure><h2 id="4-1-行内式（内联样式）"><a href="#4-1-行内式（内联样式）" class="headerlink" title="4.1 行内式（内联样式）"></a>4.1 行内式（内联样式）</h2><ul><li><p>概念：</p><p>​    称行内样式、行间样式.</p><p>​    是通过标签的style属性来设置元素的样式</p></li></ul><ul><li>其基本语法格式如下：</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">标签名</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"属性1:属性值1; 属性2:属性值2; 属性3:属性值3;"</span>&gt;</span> 内容 <span class="hljs-tag">&lt;/<span class="hljs-name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际上任何HTML标签都拥有style属性，用来设置行内式。</p><ul><li>案例：</li></ul><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style="color: red; font-size: 12px;"&gt;青春不常在，抓紧谈恋爱&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>style其实就是标签的属性</li><li>样式属性和值中间是<code>:</code></li><li>多组属性值之间用<code>;</code>隔开。</li><li>只能控制当前的标签和以及嵌套在其中的字标签，造成代码冗余</li></ul></li><li>缺点：<ul><li>没有实现样式和结构相分离</li></ul></li></ul><h2 id="4-2-内部样式表（内嵌样式表）"><a href="#4-2-内部样式表（内嵌样式表）" class="headerlink" title="4.2 内部样式表（内嵌样式表）"></a>4.2 内部样式表（内嵌样式表）</h2><ul><li><p>概念：</p><p>​    称内嵌式</p><p>​    是将CSS代码集中写在HTML文档的head头部标签中，并且用style标签定义</p></li><li><p>其基本语法格式如下：</p></li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/CSS"</span>&gt;</span></span><br><span class="line">    选择器（选择的标签） &#123; </span><br><span class="line">      属性1: 属性值1;</span><br><span class="line">      属性2: 属性值2; </span><br><span class="line">      属性3: 属性值3;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="hljs-selector-tag">style</span>&gt;</span><br><span class="line"> <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="line"> <span class="hljs-attribute">color</span>: red;</span><br><span class="line"> <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><ul><li>style标签一般位于head标签中，当然理论上他可以放在HTML文档的任何地方。</li><li>type=”text/css”  在html5中可以省略。</li><li>只能控制当前的页面</li></ul></li><li><p>缺点：</p><p>没有彻底分离</p></li></ul><h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="hljs-selector-tag">style</span>&gt;</span><br><span class="line">   <span class="hljs-comment">/*选择器&#123;属性:值；&#125;*/</span></span><br><span class="line">   <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="line">     <span class="hljs-attribute">color</span>:<span class="hljs-number">#06C</span>; </span><br><span class="line">     <span class="hljs-attribute">font-size</span>:<span class="hljs-number">14px</span>;  </span><br><span class="line">   &#125;  <span class="hljs-comment">/*文字的颜色是 蓝色*/</span></span><br><span class="line">   <span class="hljs-selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="hljs-attribute">color</span>:<span class="hljs-number">#900</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="hljs-attribute">color</span>:<span class="hljs-number">#090</span>; </span><br><span class="line">    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">16px</span>; </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="hljs-selector-tag">body</span> &#123; </span><br><span class="line">    <span class="hljs-attribute">background</span>:<span class="hljs-built_in">url</span>(bg2.jpg);</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>展示</strong></p><p><img src="/前端笔记/css-day01/tihui.png" alt></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">思考：</span><br><span class="line"> 1. 如何实现结构与样式完全分离？</span><br><span class="line"> 2. 如何实现<span class="hljs-selector-tag">css</span>样式共享？</span><br></pre></td></tr></table></figure><h2 id="4-3-外部样式表（外链式）"><a href="#4-3-外部样式表（外链式）" class="headerlink" title="4.3 外部样式表（外链式）"></a>4.3 外部样式表（外链式）</h2><ul><li><p>概念：</p><p>​    称链入式</p><p>​    是将所有的样式放在一个或多个以<strong>.CSS</strong>为扩展名的外部样式表文件中，</p><p>​    通过link标签将外部样式表文件链接到HTML文档中</p></li><li><p>其基本语法格式如下：</p></li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"css文件路径"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意：  <ul><li>link 是个单标签</li><li>link标签需要放在head头部标签中，并且指定link标签的三个属性</li></ul></li></ul><table><thead><tr><th>属性</th><th align="left">作用</th></tr></thead><tbody><tr><td>rel</td><td align="left">定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。</td></tr><tr><td>type</td><td align="left">定义所链接文档的类型，在这里需要指定为“text/CSS”，表示链接的外部文件为CSS样式表。我们都可以省略</td></tr><tr><td>href</td><td align="left">定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。</td></tr></tbody></table><p><img src="/前端笔记/css-day01/10css%E5%A4%96%E9%93%BE%E5%BC%8F.jpg" alt></p><h2 id="4-4-三种样式表总结（位置）"><a href="#4-4-三种样式表总结（位置）" class="headerlink" title="4.4 三种样式表总结（位置）"></a>4.4 三种样式表总结（位置）</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便，权重高</td><td>没有实现样式和结构相分离</td><td>较少</td><td>控制一个标签（少）</td></tr><tr><td>内部样式表</td><td>部分结构和样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面（中）</td></tr><tr><td>外部样式表</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多，强烈推荐</td><td>控制整个站点（多）</td></tr></tbody></table><h3 id="团队约定-代码风格"><a href="#团队约定-代码风格" class="headerlink" title="团队约定-代码风格"></a>团队约定-代码风格</h3><p>样式书写一般有两种：</p><ul><li>一种是紧凑格式 (Compact)</li></ul><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">h3</span> &#123; <span class="hljs-attribute">color</span>: deeppink;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li>一种是展开格式（推荐）</li></ul><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">h3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: deeppink;</span><br><span class="line">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="团队约定-代码大小写"><a href="#团队约定-代码大小写" class="headerlink" title="团队约定-代码大小写"></a>团队约定-代码大小写</h3><p>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/* 推荐 */</span></span><br><span class="line"><span class="hljs-selector-tag">h3</span>&#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/* 不推荐 */</span></span><br><span class="line"><span class="hljs-selector-tag">H3</span>&#123;</span><br><span class="line"><span class="hljs-attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-总结CSS样式规则"><a href="#5-总结CSS样式规则" class="headerlink" title="5. 总结CSS样式规则"></a>5. 总结CSS样式规则</h1><p>使用HTML时，需要遵从一定的规范。CSS亦如此，要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则，</p><p>具体格式如下：                                          </p><p><img src="/前端笔记/css-day01/gz.png" alt></p><p><strong>总结：</strong></p><ol><li>选择器用于指定CSS样式作用的HTML标签，花括号内是对该对象设置的具体样式。</li><li>属性和属性值以“键值对”的形式出现。</li><li>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等。</li><li>属性和属性值之间用英文“:”连接。</li><li>多个“键值对”之间用英文“;”进行区分。</li></ol><h1 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="@拓展阅读"></a>@拓展阅读</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwNTAzMjcxNg%3D%3D&mid=2651424749&idx=1&sn=f58bca144f50bff00ba7d1675cc8b8e7&scene=4" target="_blank" rel="noopener">CSS的发展史</a></p><blockquote><p>第01阶段.前端基础.CSS基础选择器</p></blockquote><h1 id="CSS选择器（重点）"><a href="#CSS选择器（重点）" class="headerlink" title="CSS选择器（重点）"></a>CSS选择器（重点）</h1><p> 学习目标：</p><ul><li>理解<ul><li>能说出选择器的作用</li><li>id选择器和类选择器的区别</li></ul></li><li>应用<ul><li>能够使用基础选择器给页面元素添加样式</li></ul></li></ul><h2 id="1-CSS选择器作用（重点）"><a href="#1-CSS选择器作用（重点）" class="headerlink" title="1. CSS选择器作用（重点）"></a>1. CSS选择器作用（重点）</h2><p><img src="/前端笔记/css-day01/ax.png" alt></p><p>如上图所以，要把里面的小黄人分为2组，最快的方法怎办？  </p><p>很多， 比如 一只眼睛的一组，剩下的一组  </p><h3 id="选择器的作用"><a href="#选择器的作用" class="headerlink" title="选择器的作用"></a>选择器的作用</h3><p>​    找到特定的HTML页面元素</p><p><strong>pink老师一句话说出他们： ※※※※</strong></p><blockquote><p>*<em>CSS选择器干啥的？   选择标签用的， 把我们想要的标签选择出来 *</em>  必须记住的</p></blockquote><p>css 就是 分两件事， 选对人，  做对事。 </p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">h3</span> &#123; </span><br><span class="line"><span class="hljs-attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码就是2件事， 把  h3选出来， 然后 把它变成了 红色。 以后我们都这么干。</p><p>选择器分为基础选择器和 复合选择器，我们这里先讲解一下 基础选择器。</p><h2 id="2-CSS基础选择器"><a href="#2-CSS基础选择器" class="headerlink" title="2. CSS基础选择器"></a>2. CSS基础选择器</h2><h3 id="2-1-标签选择器"><a href="#2-1-标签选择器" class="headerlink" title="2.1 标签选择器"></a>2.1 标签选择器</h3><ul><li><p>概念：</p><p>标签选择器（元素选择器）是指用<strong>HTML标签名</strong>称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。</p></li><li><p>语法：</p></li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><ul><li><p>作用：</p><p>标签选择器 可以把某一类标签<strong>全部</strong>选择出来  比如所有的div标签  和 所有的 span标签</p></li><li><p>优点：</p><p>是能快速为页面中同类型的标签统一样式</p></li><li><p>缺点：</p><p>不能设计差异化样式。</p></li></ul><p><strong>总结 口诀：</strong></p><p>   标签选择器，<br>   页面同选起。<br>   直接写标签，<br>   全部不放弃。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">思考： 如果想要差异化选择不同的标签，怎么办呢？ 就是说 我想单独选一个或者某几个标签呢？</span><br></pre></td></tr></table></figure><h3 id="2-2-类选择器"><a href="#2-2-类选择器" class="headerlink" title="2.2 类选择器"></a>2.2 类选择器</h3><p>类选择器使用“.”（英文点号）进行标识，后面紧跟类名.</p><ul><li><p>语法：</p><ul><li>类名选择器</li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.类名  &#123;   </span><br><span class="line">    属性1:属性值1; </span><br><span class="line">    属性2:属性值2; </span><br><span class="line">    属性3:属性值3;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>标签</li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&apos;类名&apos;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>优点：</p><ul><li>可以为元素对象定义单独或相同的样式。 可以选择一个或者多个标签 </li></ul></li><li><p>注意</p><ul><li>类选择器使用“.”（英文点号）进行标识，后面紧跟类名(自定义，我们自己命名的)</li><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不要纯数字、中文等命名， 尽量使用英文字母来表示。</li></ul></li></ul><p>命名规范：  见附件（Web前端开发规范手册.doc）</p><p>命名是我们通俗约定的，但是没有规定必须用这些常用的命名。</p><ul><li><p><strong>记忆口诀</strong></p><p>差异化选择<br>一个或多个<br>上面点定义<br>类名别写错<br>谁用谁调用<br>class来做。</p><p>嘿嘿，工作类最多。</p></li></ul><p><strong>课堂案例：</strong></p><p> <img src="/前端笔记/css-day01/go.png" alt></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="hljs-css">        <span class="hljs-selector-class">.blue</span> &#123;</span></span><br><span class="line">        color: blue;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="hljs-css">        <span class="hljs-selector-class">.red</span> &#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="hljs-css">        <span class="hljs-selector-class">.orange</span> &#123;</span></span><br><span class="line">color: orange;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.green</span> &#123;</span></span><br><span class="line">color: green;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"blue"</span>&gt;</span>G<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"red"</span>&gt;</span>o<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"orange"</span>&gt;</span>o<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"blue"</span>&gt;</span>g<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"green"</span>&gt;</span>l<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"red"</span>&gt;</span>e<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-类选择器特殊用法-多类名"><a href="#2-3-类选择器特殊用法-多类名" class="headerlink" title="2.3 类选择器特殊用法- 多类名"></a>2.3 类选择器特殊用法- 多类名</h3><p>我们可以给标签指定多个类名，从而达到更多的选择目的。</p><p><img src="/前端笔记/css-day01/lei.png" alt></p><p>注意：</p><ul><li>各个类名中间用空格隔开。</li><li>多类名选择器在后期布局比较复杂的情况下，还是较多使用的。</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"pink fontWeight font20"</span>&gt;</span>亚瑟<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"font20"</span>&gt;</span>刘备<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"font14 pink"</span>&gt;</span>安其拉<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"font14"</span>&gt;</span>貂蝉<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-id选择器"><a href="#2-4-id选择器" class="headerlink" title="2.4 id选择器"></a>2.4 id选择器</h3><p>id选择器使用<code>#</code>进行标识，后面紧跟id名</p><ul><li><p>其基本语法格式如下：</p><ul><li><p>id选择器</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#id名 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure></li><li><p>标签</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;id名&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>元素的id值是唯一的，只能对应于文档中某一个具体的元素。</p></li><li><p>用法基本和类选择器相同。</p></li></ul><h4 id="id选择器和类选择器区别"><a href="#id选择器和类选择器区别" class="headerlink" title="id选择器和类选择器区别"></a>id选择器和类选择器区别</h4><p> <img src="/前端笔记/css-day01/zfb.jpg" alt></p><ul><li>W3C标准规定，在同一个页面内，不允许有相同名字的id对象出现，但是允许相同名字的class。<ul><li>类选择器（class） 好比人的名字，  是可以多次重复使用的， 比如  张伟  王伟  李伟  李娜</li><li>id选择器     好比人的身份证号码，  全中国是唯一的， 不得重复。 只能使用一次。</li></ul></li></ul><p><strong><em>id选择器和类选择器最大的不同在于 使用次数上。</em></strong></p><p><strong>pink老师 总结他们</strong></p><ul><li>类选择器我们在修改样式中，用的最多。</li><li>id选择器一般用于页面唯一性的元素身上，经常和我们后面学习的javascript 搭配使用。</li></ul><h3 id="2-6-通配符选择器"><a href="#2-6-通配符选择器" class="headerlink" title="2.6 通配符选择器"></a>2.6 通配符选择器</h3><ul><li><p>概念</p><p>通配符选择器用<code>*</code>号表示，  *   就是 选择所有的标签      他是所有选择器中作用范围最广的，能匹配页面中所有的元素。</p></li><li><p>其基本语法格式如下：</p></li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><p>例如下面的代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;                    <span class="hljs-comment">/* 定义外边距*/</span></span><br><span class="line">  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;                   <span class="hljs-comment">/* 定义内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><p>会匹配页面所有的元素，降低页面响应速度，不建议随便使用</p></li></ul><h3 id="2-7-基础选择器总结"><a href="#2-7-基础选择器总结" class="headerlink" title="2.7 基础选择器总结"></a>2.7 基础选择器总结</h3><table><thead><tr><th>选择器</th><th>作用</th><th>缺点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如p</td><td>不能差异化选择</td><td>较多</td><td>p { color：red;}</td></tr><tr><td>类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td>.nav { color: red; }</td></tr><tr><td>id选择器</td><td>一次只能选择器1个标签</td><td>只能使用一次</td><td>不推荐使用</td><td>#nav {color: red;}</td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>不推荐使用</td><td>* {color: red;}</td></tr></tbody></table><p>基础选择器我们一共学了4个，  每个都有自己的价值， 可能再某个地方都能用到。但是如果说，一定要找个最常用的，那么，肯定是类选择器。</p><h3 id="2-8-团队约定"><a href="#2-8-团队约定" class="headerlink" title="2.8 团队约定"></a>2.8 团队约定</h3><p>选择器</p><ul><li>尽量少用通用选择器 <code>*</code></li><li>尽量少用 ID 选择器</li><li>不使用无具体语义定义的标签选择器 div span </li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* 推荐 */</span><br><span class="line">.jdc &#123;&#125;</span><br><span class="line">li &#123;&#125;</span><br><span class="line">p&#123;&#125;</span><br><span class="line"></span><br><span class="line">/* 不推荐 */</span><br><span class="line">*&#123;&#125;</span><br><span class="line">#jdc &#123;&#125;</span><br><span class="line">div&#123;&#125;   因为div 没有语义，我们尽量少用</span><br></pre></td></tr></table></figure><blockquote><p>第01阶段.前端基础.CSS字体样式</p></blockquote><h1 id="CSS字体样式属性调试工具"><a href="#CSS字体样式属性调试工具" class="headerlink" title="CSS字体样式属性调试工具"></a>CSS字体样式属性调试工具</h1><p> 目标</p><ul><li>应用<ul><li>使用css字体样式完成对字体的设置</li><li>使用css外观属性给页面元素添加样式</li><li>使用常用的emment语法</li><li>能够使用开发人员工具代码调试</li></ul></li></ul><h1 id="1-font字体"><a href="#1-font字体" class="headerlink" title="1.font字体"></a>1.font字体</h1><h2 id="1-1-font-size-大小"><a href="#1-1-font-size-大小" class="headerlink" title="1.1 font-size:大小"></a>1.1 font-size:大小</h2><ul><li><p>作用：</p><p>font-size属性用于设置字号</p></li></ul><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">p</span> &#123;  </span><br><span class="line">    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">20px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>单位：</p><ul><li>可以使用相对长度单位，也可以使用绝对长度单位。</li><li>相对长度单位比较常用，推荐使用像素单位px，绝对长度单位使用较少。</li></ul></li></ul><p><img src="/前端笔记/css-day01/dd.png" alt></p><p><strong>注意：</strong></p><ul><li>我们文字大小以后，基本就用px了，其他单位很少使用</li><li>谷歌浏览器默认的文字大小为16px</li><li>但是不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小。一般给body指定整个页面文字的大小</li></ul><h2 id="1-2-font-family-字体"><a href="#1-2-font-family-字体" class="headerlink" title="1.2 font-family:字体"></a>1.2 font-family:字体</h2><ul><li><p>作用：</p><p>font-family属性用于设置哪一种字体。</p></li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123; font-family:&quot;微软雅黑&quot;;&#125;</span><br></pre></td></tr></table></figure><ul><li>网页中常用的字体有宋体、微软雅黑、黑体等，例如将网页中所有段落文本的字体设置为微软雅黑</li><li>可以同时指定多个字体，中间以逗号隔开，表示如果浏览器不支持第一个字体，则会尝试下一个，直到找到合适的字体， 如果都没有，则以我们电脑默认的字体为准。</li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;font-family: Arial,&quot;Microsoft Yahei&quot;, &quot;微软雅黑&quot;;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><img src="/前端笔记/css-day01/good.png" alt>常用技巧：</p></blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 各种字体之间必须使用英文状态下的逗号隔开。</span><br><span class="line">2. 中文字体需要加英文状态下的引号，英文字体一般不需要加引号。当需要设置英文字体时，英文字体名必须位于中文字体名之前。</span><br><span class="line">3. 如果字体名中包含空格、#、$等符号，则该字体必须加英文状态下的单引号或双引号，例如font-family: &quot;Times New Roman&quot;;。</span><br><span class="line">4. 尽量使用系统默认字体，保证在任何用户的浏览器中都能正确显示。</span><br></pre></td></tr></table></figure><h3 id="CSS-Unicode字体"><a href="#CSS-Unicode字体" class="headerlink" title="CSS Unicode字体"></a>CSS Unicode字体</h3><p><img src="/前端笔记/css-day01/shs.png" alt></p><ul><li><p>为什么使用 Unicode字体</p><ul><li>在 CSS 中设置字体名称，直接写中文是可以的。但是在文件编码（GB2312、UTF-8 等）不匹配时会产生乱码的错误。</li><li>xp 系统不支持 类似微软雅黑的中文。</li></ul></li><li><p>解决：</p><ul><li><p>方案一： 你可以使用英文来替代。 比如<code>font-family:&quot;Microsoft Yahei&quot;</code>。</p></li><li><p>方案二： 在 CSS 直接使用 Unicode 编码来写字体名称可以避免这些错误。使用 Unicode 写中文字体名称，浏览器是可以正确的解析的。</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-family: &quot;\5FAE\8F6F\96C5\9ED1&quot;;   表示设置字体为“微软雅黑”。</span><br></pre></td></tr></table></figure></li></ul></li></ul><table><thead><tr><th>字体名称</th><th>英文名称</th><th>Unicode 编码</th></tr></thead><tbody><tr><td>宋体</td><td>SimSun</td><td>\5B8B\4F53</td></tr><tr><td>新宋体</td><td>NSimSun</td><td>\65B0\5B8B\4F53</td></tr><tr><td>黑体</td><td>SimHei</td><td>\9ED1\4F53</td></tr><tr><td>微软雅黑</td><td>Microsoft YaHei</td><td>\5FAE\8F6F\96C5\9ED1</td></tr><tr><td>楷体_GB2312</td><td>KaiTi_GB2312</td><td>\6977\4F53_GB2312</td></tr><tr><td>隶书</td><td>LiSu</td><td>\96B6\4E66</td></tr><tr><td>幼园</td><td>YouYuan</td><td>\5E7C\5706</td></tr><tr><td>华文细黑</td><td>STXihei</td><td>\534E\6587\7EC6\9ED1</td></tr><tr><td>细明体</td><td>MingLiU</td><td>\7EC6\660E\4F53</td></tr><tr><td>新细明体</td><td>PMingLiU</td><td>\65B0\7EC6\660E\4F53</td></tr></tbody></table><p>为了照顾不同电脑的字体安装问题，我们尽量只使用宋体和微软雅黑中文字体</p><h2 id="1-3-font-weight-字体粗细"><a href="#1-3-font-weight-字体粗细" class="headerlink" title="1.3 font-weight:字体粗细"></a>1.3 font-weight:字体粗细</h2><ul><li>在html中如何将字体加粗我们可以用标签来实现<ul><li>使用 b  和 strong 标签是文本加粗。</li></ul></li><li>可以使用CSS 来实现，但是CSS 是没有语义的。</li></ul><table><thead><tr><th>属性值</th><th align="left">描述</th></tr></thead><tbody><tr><td>normal</td><td align="left">默认值（不加粗的）</td></tr><tr><td>bold</td><td align="left">定义粗体（加粗的）</td></tr><tr><td>100~900</td><td align="left">400 等同于 normal，而 700 等同于 bold  我们重点记住这句话</td></tr></tbody></table><p>提倡：</p><p>  我们平时更喜欢用数字来表示加粗和不加粗。</p><h2 id="1-4-font-style-字体风格"><a href="#1-4-font-style-字体风格" class="headerlink" title="1.4 font-style:字体风格"></a>1.4 font-style:字体风格</h2><ul><li>在html中如何将字体倾斜我们可以用标签来实现<ul><li>字体倾斜除了用 i  和 em 标签，</li></ul></li><li>可以使用CSS 来实现，但是CSS 是没有语义的</li></ul><p>font-style属性用于定义字体风格，如设置斜体、倾斜或正常字体，其可用属性值如下：</p><table><thead><tr><th>属性</th><th align="left">作用</th></tr></thead><tbody><tr><td>normal</td><td align="left">默认值，浏览器会显示标准的字体样式  font-style: normal;</td></tr><tr><td>italic</td><td align="left">浏览器会显示斜体的字体样式。</td></tr></tbody></table><p><img src="/前端笔记/css-day01/good-1589961647864.png" alt>小技巧： </p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">平时我们很少给文字加斜体，反而喜欢给斜体标签（em，i）改为普通模式。</span><br></pre></td></tr></table></figure><h2 id="1-5-font-综合设置字体样式-重点"><a href="#1-5-font-综合设置字体样式-重点" class="headerlink" title="1.5 font:综合设置字体样式 (重点)"></a>1.5 font:综合设置字体样式 (重点)</h2><p>font属性用于对字体样式进行综合设置</p><ul><li>基本语法格式如下：</li></ul><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="hljs-attribute">font</span>: font-style  font-weight  font-size/line-height  font-family;&#125;</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以<strong>空格</strong>隔开。</li><li>其中不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font属性将不起作用。</li></ul></li></ul><h2 id="1-6-font总结"><a href="#1-6-font总结" class="headerlink" title="1.6 font总结"></a>1.6 font总结</h2><table><thead><tr><th align="left">属性</th><th align="left">表示</th><th align="left">注意点</th></tr></thead><tbody><tr><td align="left">font-size</td><td align="left">字号</td><td align="left">我们通常用的单位是px 像素，一定要跟上单位</td></tr><tr><td align="left">font-family</td><td align="left">字体</td><td align="left">实际工作中按照团队约定来写字体</td></tr><tr><td align="left">font-weight</td><td align="left">字体粗细</td><td align="left">记住加粗是 700 或者 bold  不加粗 是 normal 或者  400  记住数字不要跟单位</td></tr><tr><td align="left">font-style</td><td align="left">字体样式</td><td align="left">记住倾斜是 italic     不倾斜 是 normal  工作中我们最常用 normal</td></tr><tr><td align="left">font</td><td align="left">字体连写</td><td align="left">1. 字体连写是有顺序的  不能随意换位置 2. 其中字号 和 字体 必须同时出现</td></tr></tbody></table><h1 id="2-CSS外观属性"><a href="#2-CSS外观属性" class="headerlink" title="2. CSS外观属性"></a>2. CSS外观属性</h1><h2 id="2-1-color-文本颜色"><a href="#2-1-color-文本颜色" class="headerlink" title="2.1 color:文本颜色"></a>2.1 color:文本颜色</h2><ul><li><p>作用：</p><p>color属性用于定义文本的颜色，</p></li><li><p>其取值方式有如下3种：</p></li></ul><table><thead><tr><th align="left">表示表示</th><th align="left">属性值</th></tr></thead><tbody><tr><td align="left">预定义的颜色值</td><td align="left">red，green，blue，还有我们的御用色 pink</td></tr><tr><td align="left">十六进制</td><td align="left">#FF0000，#FF6600，#29D794</td></tr><tr><td align="left">RGB代码</td><td align="left">rgb(255,0,0)或rgb(100%,0%,0%)</td></tr></tbody></table><ul><li><p>注意</p><p>我们实际工作中， 用 16进制的写法是最多的，而且我们更喜欢简写方式比如  #f00 代表红色</p></li></ul><h2 id="2-2-text-align-文本水平对齐方式"><a href="#2-2-text-align-文本水平对齐方式" class="headerlink" title="2.2 text-align:文本水平对齐方式"></a>2.2 text-align:文本水平对齐方式</h2><ul><li><p>作用：</p><p>text-align属性用于设置文本内容的水平对齐，相当于html中的align对齐属性</p></li><li><p>其可用属性值如下：</p></li></ul><table><thead><tr><th>属性</th><th align="center">解释</th></tr></thead><tbody><tr><td>left</td><td align="center">左对齐（默认值）</td></tr><tr><td>right</td><td align="center">右对齐</td></tr><tr><td>center</td><td align="center">居中对齐</td></tr></tbody></table><ul><li><p>注意：</p><p>是让盒子里面的内容水平居中， 而不是让盒子居中对齐</p></li></ul><h2 id="2-3-line-height-行间距"><a href="#2-3-line-height-行间距" class="headerlink" title="2.3 line-height:行间距"></a>2.3 line-height:行间距</h2><ul><li><p>作用：</p><p>line-height属性用于设置行间距，就是行与行之间的距离，即字符的垂直间距，一般称为行高。</p></li><li><p>单位：</p><ul><li>line-height常用的属性值单位有三种，分别为像素px，相对值em和百分比%，实际工作中使用最多的是像素px</li></ul></li><li><p>技巧：</p></li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一般情况下，行距比字号大7.8像素左右就可以了。</span><br><span class="line">line-height: 24px;</span><br></pre></td></tr></table></figure><h2 id="2-4-text-indent-首行缩进"><a href="#2-4-text-indent-首行缩进" class="headerlink" title="2.4 text-indent:首行缩进"></a>2.4 text-indent:首行缩进</h2><ul><li><p>作用：</p><p>text-indent属性用于设置首行文本的缩进，</p></li><li><p>属性值</p><ul><li>其属性值可为不同单位的数值、em字符宽度的倍数、或相对于浏览器窗口宽度的百分比%，允许使用负值,</li><li>建议使用em作为设置单位。</li></ul></li></ul><p><strong>1em 就是一个字的宽度   如果是汉字的段落， 1em 就是一个汉字的宽度</strong></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">p</span> &#123;</span><br><span class="line">      <span class="hljs-comment">/*行间距*/</span></span><br><span class="line">      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">25px</span>;</span><br><span class="line">      <span class="hljs-comment">/*首行缩进2个字  em  1个em 就是1个字的大小*/</span></span><br><span class="line">      <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">2em</span>;  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-text-decoration-文本的装饰"><a href="#2-5-text-decoration-文本的装饰" class="headerlink" title="2.5 text-decoration 文本的装饰"></a>2.5 text-decoration 文本的装饰</h2><p>text-decoration   通常我们用于给链接修改装饰效果</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>默认。定义标准的文本。 取消下划线（最常用）</td></tr><tr><td>underline</td><td>定义文本下的一条线。下划线 也是我们链接自带的（常用）</td></tr><tr><td>overline</td><td>定义文本上的一条线。（不用）</td></tr><tr><td>line-through</td><td>定义穿过文本下的一条线。（不常用）</td></tr></tbody></table><h2 id="2-6-CSS外观属性总结"><a href="#2-6-CSS外观属性总结" class="headerlink" title="2.6 CSS外观属性总结"></a>2.6 CSS外观属性总结</h2><table><thead><tr><th align="left">属性</th><th align="left">表示</th><th align="left">注意点</th></tr></thead><tbody><tr><td align="left">color</td><td align="left">颜色</td><td align="left">我们通常用  十六进制   比如 而且是简写形式 #fff</td></tr><tr><td align="left">line-height</td><td align="left">行高</td><td align="left">控制行与行之间的距离</td></tr><tr><td align="left">text-align</td><td align="left">水平对齐</td><td align="left">可以设定文字水平的对齐方式</td></tr><tr><td align="left">text-indent</td><td align="left">首行缩进</td><td align="left">通常我们用于段落首行缩进2个字的距离   text-indent: 2em;</td></tr><tr><td align="left">text-decoration</td><td align="left">文本修饰</td><td align="left">记住 添加 下划线  underline  取消下划线  none</td></tr></tbody></table><h1 id="3-开发者工具（chrome）"><a href="#3-开发者工具（chrome）" class="headerlink" title="3.开发者工具（chrome）"></a>3.开发者工具（chrome）</h1><p><strong>此工具是我们的必备工具，以后代码出了问题</strong></p><p><strong>我们首先第一反应就是：</strong></p><ul><li>“按F12”或者是 “shift+ctrl+i”   打开 开发者工具。</li><li>菜单：   右击网页空白出—检查</li></ul><p><img src="/前端笔记/css-day01/11%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%B7%A5%E5%85%B7.jpg" alt></p><ul><li>通过开发人员工具小指针工具，查找页面元素</li><li>左侧是html页面结构，右侧是css样式</li></ul><p><img src="/前端笔记/css-day01/good-1589961690478.png" alt>小技巧：</p><ol><li>ctrl+滚轮 可以 放大开发者工具代码大小。</li><li>左边是HTML元素结构   右边是CSS样式。</li><li>右边CSS样式可以改动数值和颜色查看更改后效果。</li><li>ctrl + 0  复原浏览器大小</li></ol><h1 id="4-sublime快捷操作emmet语法"><a href="#4-sublime快捷操作emmet语法" class="headerlink" title="4. sublime快捷操作emmet语法"></a>4. sublime快捷操作emmet语法</h1><p>Emmet的前身是Zen coding,它使用缩写,来提高html/css的编写速度。</p><ol><li><p>生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 <div></div></p></li><li><p>如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div</p></li><li><p>如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了</p></li><li><p>如果有兄弟关系的标签，用  +  就可以了 比如 div+p  </p></li><li><p>如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了</p></li><li><p>如果生成的div 类名是有顺序的， 可以用 自增符号  $     </p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.demo$*3        </span><br><span class="line">&lt;div class=&quot;demo1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;demo2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;demo3&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="5-综合案例"><a href="#5-综合案例" class="headerlink" title="5. 综合案例"></a>5. 综合案例</h1><p><img src="/前端笔记/css-day01/css1.png" alt></p><h1 id="6-拓展阅读"><a href="#6-拓展阅读" class="headerlink" title="6. 拓展阅读@"></a>6. 拓展阅读@</h1><p><a href="https://www.w3cplus.com/tools/emmet-cheat-sheet.html" target="_blank" rel="noopener">emment语法</a></p></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.CSS初识&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;CSS层叠样式表&quot;&gt;&lt;a href=&quot;#CSS层叠样式表&quot; class=&quot;headerlink&quot; title=&quot;CSS层叠样式表&quot;&gt;&lt;/a&gt;CSS层叠样式表&lt;/h
      
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CSS" scheme="http://www.itfool.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML-Day05</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/html-day05/"/>
    <id>http://www.itfool.cn/前端笔记/html-day05/</id>
    <published>2020-05-20T07:24:23.000Z</published>
    <updated>2020-05-20T07:30:43.257Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.列表和表单</p></blockquote><h1 id="1-列表标签（重点）"><a href="#1-列表标签（重点）" class="headerlink" title="1. 列表标签（重点）"></a>1. 列表标签（重点）</h1><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul><li><p>理解</p><ul><li>无序列表的应用场景</li><li>自定义列表的应用场景</li></ul></li><li><p>应用</p><ul><li><p>无序列表语法</p></li><li><p>自定义列表语法</p></li></ul></li></ul><a id="more"></a>    <p>问？</p><p>前面我们知道表格一般用于数据展示的，但是网页中还是有很多跟表格类似的布局，如下图~~ 我们用什么做呢？</p><p> <img src="/前端笔记/html-day05/lili.png" alt></p><p>答：</p><p>答案是列表， 那什么是列表？  表格是用来显示数据的，那么列表就是用来布局的。 因为非常整齐和自由</p><p> <img src="/前端笔记/html-day05/list.png" alt></p><ul><li><p>概念：</p><p>容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表</p></li><li><p>特点：</p><p>列表最大的特点就是  整齐 、整洁、 有序，跟表格类似，但是他可组合自由度会更高。</p></li></ul><h2 id="1-1-无序列表-ul-（重点）"><a href="#1-1-无序列表-ul-（重点）" class="headerlink" title="1.1 无序列表 ul （重点）"></a>1.1 无序列表 ul （重点）</h2><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>比如下面这些，新闻是没有顺序的，不用排队，先到先得，后发布先显示。</p><p> <img src="/前端笔记/html-day05/ul.png" alt></p><p><strong>脚下留心：</strong></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</span><br><span class="line">2. &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</span><br><span class="line">3. 无序列表会带有自己样式属性，放下那个样式，一会让CSS来！</span><br></pre></td></tr></table></figure><h2 id="1-2-有序列表-ol-（了解）"><a href="#1-2-有序列表-ol-（了解）" class="headerlink" title="1.2  有序列表 ol （了解）"></a>1.2  有序列表 ol （了解）</h2><p><img src="/前端笔记/html-day05/gold.png" alt></p><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表项3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  所有特性基本与ul 一致。  但是实际中比 无序列表 用的少很多。</p><h2 id="1-3-自定义列表（理解）"><a href="#1-3-自定义列表（理解）" class="headerlink" title="1.3 自定义列表（理解）"></a>1.3 自定义列表（理解）</h2><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>名词1<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词1解释1<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词1解释2<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>名词2<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词2解释1<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>名词2解释2<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <img src="/前端笔记/html-day05/2.jpg" alt> </p><p>用的还可以：</p><p><img src="/前端笔记/html-day05/mix.png" alt></p><p><img src="/前端笔记/html-day05/09%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8.jpg" alt></p><h2 id="1-4-列表总结"><a href="#1-4-列表总结" class="headerlink" title="1.4 列表总结"></a>1.4 列表总结</h2><table><thead><tr><th>标签名</th><th align="center">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td><ul></ul></td><td align="center"><strong>无序标签</strong></td><td align="left">里面只能包含li    没有顺序，我们以后布局中最常用的列表</td></tr><tr><td><ol></ol></td><td align="center">有序标签</td><td align="left">里面只能包含li    有顺序， 使用情况较少</td></tr><tr><td><dl></dl></td><td align="center">自定义列表</td><td align="left">里面有2个兄弟， dt 和 dd</td></tr></tbody></table><p>我们现在还没有学布局，现在只要保证2个点：</p><ol><li>学会什么时候用无序列表， 学会什么时候用自定义列表</li><li>无序列表和自定义列表代码怎么写？</li><li>具体的我们刚才看的布局，等我们学了css 在来全面布局。</li></ol><h1 id="2-表单标签-掌握"><a href="#2-表单标签-掌握" class="headerlink" title="2. 表单标签(掌握)"></a>2. 表单标签(掌握)</h1><p>目标：</p><ul><li>能写出最常用的注册类表单</li><li>能说出input表单常见属性</li></ul><p>现实中的表单，类似我们去银行办理信用卡填写的单子。 如下图</p><p><img src="/前端笔记/html-day05/car.jpg" alt></p><p>*<em>作用： *</em></p><p>表单目的是为了收集用户信息。</p><p>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。</p><blockquote><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。</p></blockquote><p><img src="/前端笔记/html-day05/bd.png" alt></p><p>  *<em>表单控件： *</em></p><p>​       包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p>  <strong>提示信息：</strong></p><p>​        一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p>  <strong>表单域：</strong>  </p><p>​      他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h2 id="2-1-input-控件-重点"><a href="#2-1-input-控件-重点" class="headerlink" title="2.1 input 控件(重点)"></a>2.1 input 控件(重点)</h2><ul><li><p>语法：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"属性值"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"你好"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思 </li><li>&lt;input /&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul></li><li><p>常用属性：</p></li></ul><p><img src="/前端笔记/html-day05/input.png" alt></p><h4 id="1-type-属性"><a href="#1-type-属性" class="headerlink" title="1. type 属性"></a>1. type 属性</h4><ul><li>这个属性通过改变值，可以决定了你属于那种input表单。</li><li>比如 type = ‘text’  就表示 文本框 可以做 用户名， 昵称等。</li><li>比如 type = ‘password’  就是表示密码框   用户输入的内容 是不可见的。</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> /&gt;</span> </span><br><span class="line">密  码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-value属性-值"><a href="#2-value属性-值" class="headerlink" title="2. value属性   值"></a>2. value属性   值</h4><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"请输入用户名"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>value 默认的文本值。 有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</li></ul><h4 id="3-name属性"><a href="#3-name属性" class="headerlink" title="3. name属性"></a>3. name属性</h4><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">“username”</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。  页面中的表单很多，name主要作用就是用于区别不同的表单。</p><ul><li>name属性后面的值，是我们自己定义的。</li></ul><ul><li>radio  如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sex"</span>  /&gt;</span>男</span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sex"</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><ul><li>name属性，我们现在用的较少， 但是，当我们学ajax 和后台的时候，是必须的。</li></ul><h4 id="4-checked属性"><a href="#4-checked属性" class="headerlink" title="4. checked属性"></a>4. checked属性</h4><ul><li>表示默认选中状态。  较常见于 单选按钮和复选按钮。</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sex"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"男"</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">"checked"</span> /&gt;</span>男</span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sex"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"女"</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><p>上面这个，表示就默认选中了 男 这个单选按钮</p><h4 id="5-input-属性小结"><a href="#5-input-属性小结" class="headerlink" title="5. input 属性小结"></a>5. input 属性小结</h4><table><thead><tr><th>属性</th><th align="left">说明</th><th>作用</th></tr></thead><tbody><tr><td>type</td><td align="left">表单类型</td><td>用来指定不同的控件类型</td></tr><tr><td>value</td><td align="left">表单值</td><td>表单里面默认显示的文本</td></tr><tr><td>name</td><td align="left">表单名字</td><td>页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td>checked</td><td align="left">默认选中</td><td>表示那个单选或者复选按钮一开始就被选中了</td></tr></tbody></table><h2 id="2-2-label标签-理解"><a href="#2-2-label标签-理解" class="headerlink" title="2.2 label标签(理解)"></a>2.2 label标签(理解)</h2><p><strong>目标：</strong></p><p>label标签主要目的是为了提高用户体验。 为用户提高最优秀的服务。</p><p><strong>概念：</strong></p><p>label 标签为 input 元素定义标注（标签）。</p><p><strong>作用：</strong> </p><p> 用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</p><p><strong>如何绑定元素呢？</strong></p><ol><li>第一种用法就是用label直接包括input表单。</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span> 用户名： <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"usename"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"请输入用户名"</span>&gt;</span>   <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   适合单个表单选择</p><ol start="2"><li>第二种用法 for 属性规定 label 与哪个表单元素绑定。</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"sex"</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sex"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"sex"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p> 当我们鼠标点击 label标签里面的文字时， 光标会定位到指定的表单里面</p></blockquote><h2 id="2-3-textarea控件-文本域"><a href="#2-3-textarea控件-文本域" class="headerlink" title="2.3 textarea控件(文本域)"></a>2.3 textarea控件(文本域)</h2><p><img src="/前端笔记/html-day05/textarea.png" alt></p><ul><li>语法：</li></ul><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> &gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>作用：</p><p>通过textarea控件可以轻松地创建多行文本输入框.</p><p>cols=”每行中的字符数” rows=”显示的行数”  我们实际开发不用</p></li></ul><h4 id="文本框和文本域区别"><a href="#文本框和文本域区别" class="headerlink" title="文本框和文本域区别"></a>文本框和文本域区别</h4><table><thead><tr><th align="left">表单</th><th align="center">名称</th><th align="center">区别</th><th align="right">默认值显示</th><th align="right">用于场景</th></tr></thead><tbody><tr><td align="left">input type=”text”</td><td align="center">文本框</td><td align="center">只能显示一行文本</td><td align="right">单标签，通过value显示默认值</td><td align="right">用户名、昵称、密码等</td></tr><tr><td align="left">textarea</td><td align="center">文本域</td><td align="center">可以显示多行文本</td><td align="right">双标签，默认值写到标签中间</td><td align="right">留言板</td></tr></tbody></table><h2 id="2-4-select下拉列表"><a href="#2-4-select下拉列表" class="headerlink" title="2.4 select下拉列表"></a>2.4 select下拉列表</h2><p><strong>目的：</strong></p><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表.</p><p><img src="/前端笔记/html-day05/sele.png" alt></p><p><strong>语法：</strong></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>选项1<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>选项2<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>选项3<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><ol><li>&lt;select&gt;  中至少包含一对 option </li><li>在option 中定义selected =” selected “时，当前项即为默认选中项。</li><li>但是我们实际开发会用的比较少</li></ol><h1 id="3-form表单域"><a href="#3-form表单域" class="headerlink" title="3. form表单域"></a>3. form表单域</h1><ul><li><p>收集的用户信息怎么传递给服务器？</p><p>通过form表单域</p></li><li><p>目的：</p><p>在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。</p></li></ul><p>*<em>语法: *</em></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"url地址"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"提交方式"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"表单名称"</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>常用属性：</strong></p><table><thead><tr><th>属性</th><th align="left">属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td align="left">url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td>method</td><td align="left">get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td align="left">名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table><p><strong>注意:</strong>  </p><p>每个表单都应该有自己表单域。我们现在做页面，不写看不到效果，但是 如果后面学 ajax 后台交互的时候，必须需要 form表单域。</p><h2 id="2-6-团队约定"><a href="#2-6-团队约定" class="headerlink" title="2.6 团队约定"></a>2.6 团队约定</h2><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上</li></ul><p><em>推荐：</em></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> /&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">"checked"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">text</span>  /&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">'text'</span> /&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">checked</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4-综合案例（注册页面）"><a href="#4-综合案例（注册页面）" class="headerlink" title="4.综合案例（注册页面）"></a>4.综合案例（注册页面）</h1><p><img src="/前端笔记/html-day05/bdd.png" alt></p><h1 id="5-查文档"><a href="#5-查文档" class="headerlink" title="5. 查文档"></a>5. 查文档</h1><p>经常查阅文档是一个非常好的学习习惯。</p><p>W3C :  <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a></p><p>MDN: <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.列表和表单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-列表标签（重点）&quot;&gt;&lt;a href=&quot;#1-列表标签（重点）&quot; class=&quot;headerlink&quot; title=&quot;1. 列表标签（重点）&quot;&gt;&lt;/a&gt;1. 列表标签（重点）&lt;/h1&gt;&lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序列表的应用场景&lt;/li&gt;
&lt;li&gt;自定义列表的应用场景&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;无序列表语法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义列表语法&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://www.itfool.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML-Day04</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/html-day04/"/>
    <id>http://www.itfool.cn/前端笔记/html-day04/</id>
    <published>2020-05-20T07:05:52.000Z</published>
    <updated>2020-05-20T07:16:01.395Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.表格</p></blockquote><h1 id="HTML-第二天目标"><a href="#HTML-第二天目标" class="headerlink" title="HTML 第二天目标"></a>HTML 第二天目标</h1><p> 能够利用表格、列表和表单完成注册页面的综合案例</p><ul><li>能出说表格用来做什么的</li><li>能说出列表用来做什么的</li><li>能说出表单用来做什么的</li></ul><p>为了让我们页面显示的更加整齐，我们需要学习三个表（表格、表单、列表）</p><a id="more"></a><p><img src="/前端笔记/html-day04/guifan-1589958612551.png" alt></p><h1 id="表格-table-会使用"><a href="#表格-table-会使用" class="headerlink" title="表格 table(会使用)"></a>表格 table(会使用)</h1><p>目标：</p><ul><li>理解：<ul><li>能说出表格用来做什么的</li><li>表格的基本结构组成</li></ul></li><li>应用：<ul><li>能够熟练写出n行n列的表格</li><li>能简单的合并单元格<br>​<br><img src="/前端笔记/html-day04/tt-1589958592186.png" alt></li></ul></li></ul><p><strong>表格作用：</strong></p><p>存在即是合理的。  表格的现在还是较为常用的一种标签，但不是用来布局，<strong>常见显示、展示表格式数据。</strong></p><p>因为它可以让数据显示的非常的规整，可读性非常好。</p><p><strong>特别是后台展示数据的时候表格运用是否熟练就显得很重要</strong>，一个清爽简约的表格能够把繁杂的数据表现得很有条理，虽然 div 布局也可以做到，但是总没有表格来得方便。</p><p><img src="/前端笔记/html-day04/table-1589958564036.png" alt></p><p>ps:  这些地方用表格，你会觉得生活还是那么美好。。。。忍不住想说  PPAP i hava a pen  </p><h2 id="1-创建表格"><a href="#1-创建表格" class="headerlink" title="1. 创建表格"></a>1. 创建表格</h2><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。</p><p><strong>创建表格的基本语法：</strong></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>单元格内的文字<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要深刻体会表格、行、单元格他们的构成。</p><p>在上面的语法中包含基本的三对HTML标签，分别为 table、tr、td，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释</p><ol><li><p>table用于定义一个表格标签。</p></li><li><p>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</p></li><li><p>td 用于定义表格中的单元格，必须嵌套在<tr></tr>标签中。</p></li><li><p>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。</p></li></ol><p><img src="/前端笔记/html-day04/07table%E8%A1%A8%E6%A0%BC%E5%B1%9E%E6%80%A7.jpg" alt></p><p>*<em>总结： *</em></p><ul><li>表格的主要目的是用来显示特殊数据的</li><li>一个完整的表格有表格标签（table），行标签（tr），单元格标签（td）组成，没有列的标签</li></ul><ul><li><tr></tr>中只能嵌套<td></td> 类的单元格</li><li><td></td>标签，他就像一个容器，可以容纳所有的元素</li></ul><h2 id="2-表格属性"><a href="#2-表格属性" class="headerlink" title="2. 表格属性"></a>2. 表格属性</h2><p>表格有部分属性我们不常用，这里重点记住 cellspacing 、 cellpadding。</p><p><img src="/前端笔记/html-day04/tt-1589958646349.png" alt></p><p>我们经常有个说法，是三参为0，  平时开发的我们这三个参数    border  cellpadding  cellspacing  为  0</p><p><img src="/前端笔记/html-day04/07table%E8%A1%A8%E6%A0%BC%E5%B1%9E%E6%80%A7-1589958668773.jpg" alt></p><p><strong>案例1：</strong></p><p><img src="/前端笔记/html-day04/%E8%A1%A8%E6%A0%BC%E6%95%88%E6%9E%9C01.png" alt></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"1"</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">"20"</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>刘德华<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>55<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>郭富城<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>52<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>张学友<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>58<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>黎明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>刘晓庆<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>63<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-表头单元格标签th"><a href="#3-表头单元格标签th" class="headerlink" title="3. 表头单元格标签th"></a>3. 表头单元格标签th</h2><ul><li><p>作用：</p><ul><li>一般表头单元格位于表格的第一行或第一列，并且文本加粗居中</li></ul></li><li><p>语法：</p><ul><li>只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。 </li></ul><p><img src="/前端笔记/html-day04/th.png" alt></p></li></ul><p><strong>案例2：</strong></p><p>​    效果图</p><p><img src="/前端笔记/html-day04/tht.png" alt></p><p>​    代码：</p><hr><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"1"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">"0"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  </span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span> </span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>电话<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小王<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>110<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>120<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>th 也是一个单元格   只不过和普通的 td单元格不一样，它会让自己里面的文字居中且加粗</p></blockquote><h2 id="4-表格标题caption"><a href="#4-表格标题caption" class="headerlink" title="4. 表格标题caption"></a>4. 表格标题caption</h2><p><strong>定义和用法</strong></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>我是表格标题<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>*<em>注意： *</em></p><ol><li>caption 元素定义<strong>表格标题</strong>，通常这个标题会被居中且显示于表格之上。</li><li>caption 标签必须紧随 table 标签之后。</li><li>这个标签只存在 表格里面才有意义。你是风儿我是沙</li></ol><p><strong>案例3：</strong></p><p>根据要求完成以下案例：</p><p><img src="/前端笔记/html-day04/pa.png" alt></p><h2 id="5-合并单元格-难点"><a href="#5-合并单元格-难点" class="headerlink" title="5. 合并单元格(难点)"></a>5. 合并单元格(难点)</h2><p>合并单元格是我们比较常用的一个操作，但是不会合并的很复杂。</p><p><img src="/前端笔记/html-day04/he.jpg" alt></p><h3 id="5-1-合并单元格2种方式"><a href="#5-1-合并单元格2种方式" class="headerlink" title="5.1 合并单元格2种方式"></a>5.1 合并单元格2种方式</h3><ul><li>跨行合并：rowspan=”合并单元格的个数”      </li><li>跨列合并：colspan=”合并单元格的个数”</li></ul><p><img src="/前端笔记/html-day04/08table%E5%90%88%E5%B9%B6%E5%8D%95%E5%85%83%E6%A0%BC.jpg" alt></p><h3 id="5-2-合并单元格顺序"><a href="#5-2-合并单元格顺序" class="headerlink" title="5.2 合并单元格顺序"></a>5.2 合并单元格顺序</h3><blockquote><p>*<em>合并的顺序我们按照   先上 后下     先左  后右 的顺序 *</em></p></blockquote><p>跟我们以前学习汉字的书写顺序完全一致。</p><h3 id="5-3-合并单元格三步曲"><a href="#5-3-合并单元格三步曲" class="headerlink" title="5.3 合并单元格三步曲"></a>5.3 合并单元格三步曲</h3><ol><li>先确定是跨行还是跨列合并</li><li>根据 先上 后下   先左  后右的原则找到目标单元格    然后写上 合并方式 还有 要合并的单元格数量  比如 ： <td colspan="3">   </td></li><li>删除多余的单元格 单元格      </li></ol><h2 id="6-总结表格"><a href="#6-总结表格" class="headerlink" title="6. 总结表格"></a>6. 总结表格</h2><table><thead><tr><th>标签名</th><th align="left">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td><table></table></td><td align="left">表格标签</td><td align="left">就是一个四方的盒子</td></tr><tr><td></td></tr><tr></tr><td align="left">表格行标签</td><td align="left">行标签要再table标签内部才有意义</td><tr><td></td><td></td><td align="left">单元格标签</td><td align="left">单元格标签是个容器级元素，可以放任何东西</td></tr><tr><td><th></th></td><td align="left">表头单元格标签</td><td align="left">它还是一个单元格，但是里面的文字会居中且加粗</td></tr><tr><td><caption></caption></td><td align="left">表格标题标签</td><td align="left">表格的标题，跟着表格一起走，和表格居中对齐</td></tr><tr><td>clospan 和 rowspan</td><td align="left">合并属性</td><td align="left">用来合并单元格的</td></tr></tbody></table><ol><li>表格提供了HTML 中定义表格式数据的方法。</li><li>表格中由行中的单元格组成。</li><li>表格中没有列元素，列的个数取决于行的单元格个数。</li><li>表格不要纠结于外观，那是CSS 的作用。</li><li>表格的学习要求：  能手写表格结构，并且能简单合并单元格。</li></ol><h2 id="7-拓展阅读"><a href="#7-拓展阅读" class="headerlink" title="7. 拓展阅读@"></a>7. 拓展阅读@</h2><h3 id="表格划分结构（了解）"><a href="#表格划分结构（了解）" class="headerlink" title="表格划分结构（了解）"></a>表格划分结构（了解）</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构</span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day04/thead.png" alt></p><p><strong>注意：</strong></p><ol><li><thead></thead>：用于定义表格的头部。用来放标题之类的东西。<thead> 内部必须拥有 <tr> 标签！</tr></thead></li><li><tbody></tbody>：用于定义表格的主体。放数据本体 。</li><li><tfoot></tfoot>放表格的脚注之类。</li><li>以上标签都是放到table标签中。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.表格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;HTML-第二天目标&quot;&gt;&lt;a href=&quot;#HTML-第二天目标&quot; class=&quot;headerlink&quot; title=&quot;HTML 第二天目标&quot;&gt;&lt;/a&gt;HTML 第二天目标&lt;/h1&gt;&lt;p&gt; 能够利用表格、列表和表单完成注册页面的综合案例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能出说表格用来做什么的&lt;/li&gt;
&lt;li&gt;能说出列表用来做什么的&lt;/li&gt;
&lt;li&gt;能说出表单用来做什么的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了让我们页面显示的更加整齐，我们需要学习三个表（表格、表单、列表）&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://www.itfool.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML-Day03</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/html-day03/"/>
    <id>http://www.itfool.cn/前端笔记/html-day03/</id>
    <published>2020-05-19T06:55:44.000Z</published>
    <updated>2020-05-19T08:48:51.078Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.HTML常用标签</p></blockquote><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul><li><p>理解：</p><ul><li>相对路径三种形式</li></ul></li><li><p>应用</p><ul><li>排版标签</li><li>文本格式化标签</li><li>图像标签</li><li>链接</li><li>相对路径，绝对路径的使用<a id="more"></a><h1 id="1-HTML常用标签"><a href="#1-HTML常用标签" class="headerlink" title="1. HTML常用标签"></a>1. HTML常用标签</h1></li></ul><p>首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。</p><p>HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。 </p></li></ul><h2 id="1-1-排版标签"><a href="#1-1-排版标签" class="headerlink" title="1.1 排版标签"></a>1.1 排版标签</h2><p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><h3 id="1）标题标签h-熟记"><a href="#1）标题标签h-熟记" class="headerlink" title="1）标题标签h (熟记)"></a>1）标题标签h (熟记)</h3><p> 单词缩写：  head   头部. 标题       title  文档标题</p><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即</p><p><strong>标题标签语义：</strong>  作为标题使用，并且依据重要性递减</p><p>其基本语法格式如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>   标题文本   <span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p><p>  <img src="/前端笔记/html-day03/h.png" alt></p><p><strong>小结 :</strong></p><ul><li>加了标题的文字会变的加粗，字号也会依次变大</li><li>一行是只能放一个标题的</li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">传智播客学前端，</span><br><span class="line">　　 前端入门亦简单。</span><br><span class="line">　　 简单知识简单看，</span><br><span class="line">　　 重点勤练写三遍。</span><br><span class="line">　　 标题一共六级选，</span><br><span class="line">　　 具体效果刷新见。</span><br><span class="line">　　        ------pink老师</span><br></pre></td></tr></table></figure><h3 id="2）段落标签p-熟记"><a href="#2）段落标签p-熟记" class="headerlink" title="2）段落标签p ( 熟记)"></a>2）段落标签p ( 熟记)</h3><p>单词缩写：  paragraph  段落  [ˈpærəgræf]    无须记这个单词</p><p><strong>作用语义：</strong></p><p>可以把 HTML 文档分割为若干段落</p><p> 在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>  文本内容  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><h3 id="3）水平线标签hr-认识"><a href="#3）水平线标签hr-认识" class="headerlink" title="3）水平线标签hr(认识)"></a>3）水平线标签hr(认识)</h3><p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr>就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p> 在网页中显示默认样式的水平线。</p><p>课堂练习:新闻页面 </p><p><img src="/前端笔记/html-day03/sh.png" alt> </p><h3 id="4）换行标签br-熟记"><a href="#4）换行标签br-熟记" class="headerlink" title="4）换行标签br (熟记)"></a>4）换行标签br (熟记)</h3><p>单词缩写：  break   打断 ,换行</p><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这时如果还像在word中直接敲回车键换行就不起作用了。</p><p>此处有练习题</p><h3 id="5）div-和-span标签-重点"><a href="#5）div-和-span标签-重点" class="headerlink" title="5）div 和  span标签(重点)"></a>5）div 和  span标签(重点)</h3><p>div   span    是没有语义的     是我们网页布局主要的2个盒子   想必你听过  css+div</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>span   跨度，跨距；范围    </p><p>语法格式：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span> 这是头部 <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>今日价格<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>他们两个都是盒子，用来装我们网页元素的， 只不过他们有区别，现在我们记住</p><ul><li>div标签  用来布局的，但是现在一行只能放一个div</li><li>span标签  用来布局的，一行上可以放好多个span</li></ul><p>后面后面讲显示模式的时候，会告诉大家</p><h3 id="排版标签总结"><a href="#排版标签总结" class="headerlink" title="排版标签总结"></a>排版标签总结</h3><table><thead><tr><th>标签名</th><th align="left">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td><hx></hx></td><td align="left">标题标签</td><td align="left">作为标题使用，并且依据重要性递减</td></tr><tr><td><p></p></td><td align="left">段落标签</td><td align="left">可以把 HTML 文档分割为若干段落</td></tr><tr><td><hr></td><td align="left">水平线标签</td><td align="left">没啥可说的，就是一条线</td></tr><tr><td><br></td><td align="left">换行标签</td><td align="left"></td></tr><tr><td><div></div></td><td align="left">div标签</td><td align="left">用来布局的，但是现在一行只能放一个div</td></tr><tr><td><span></span></td><td align="left">span标签</td><td align="left">用来布局的，一行上可以放好多个span</td></tr></tbody></table><h2 id="1-2-文本格式化标签-熟记"><a href="#1-2-文本格式化标签-熟记" class="headerlink" title="1.2 文本格式化标签(熟记)"></a>1.2 文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><img src="/前端笔记/html-day03/BaiduNetdiskDownload/%25E9%25BB%2591%25E9%25A9%25AC/www.fxw.la_%2520WEB%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A8%25E5%25A5%2597%25E8%25A7%2586%25E9%25A2%2591%25E6%2595%2599%25E7%25A8%258B/%25E3%2580%259027%25E3%2580%2591%25E6%25BA%2590%25E7%25A0%2581+%25E8%25AF%25BE%25E4%25BB%25B6+%25E8%25BD%25AF%25E4%25BB%25B6/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580_9fxw.com/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580/01-HTML%25E8%25B5%2584%25E6%2596%2599/02.HTML-Day02/%25E7%25AC%2594%25E8%25AE%25B0/media/tab.png"><p><strong>区别：</strong></p><p> b  只是加粗        strong  除了可以加粗还有 强调的意思，  语义更强烈。</p><p>剩下的同理…    </p><blockquote><p>请同学们重点记住 前两组   加粗 和 倾斜   后面两组没记住回来查</p></blockquote><h2 id="1-3-标签属性"><a href="#1-3-标签属性" class="headerlink" title="1.3 标签属性"></a>1.3 标签属性</h2><p> <img src="/前端笔记/html-day03/ttt.jpg" alt></p><p>所谓属性就是<strong>外在特性</strong>  比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><ul><li>手机的颜色是黑色   </li><li>手机的尺寸是 8寸 </li><li>水平线的长度是 200  </li><li>图片的宽度 是  300    </li></ul><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">标签名</span> 属性<span class="hljs-attr">1</span>=<span class="hljs-string">"属性值1"</span> 属性<span class="hljs-attr">2</span>=<span class="hljs-string">"属性值2"</span> …&gt;</span> 内容 <span class="hljs-tag">&lt;/<span class="hljs-name">标签名</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">手机</span> 颜色=<span class="hljs-string">"红色"</span> 大小=<span class="hljs-string">"5寸"</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">手机</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提倡：   尽量不使用 样式属性。   <img src="/前端笔记/html-day03/BaiduNetdiskDownload/%25E9%25BB%2591%25E9%25A9%25AC/www.fxw.la_%2520WEB%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A8%25E5%25A5%2597%25E8%25A7%2586%25E9%25A2%2591%25E6%2595%2599%25E7%25A8%258B/%25E3%2580%259027%25E3%2580%2591%25E6%25BA%2590%25E7%25A0%2581+%25E8%25AF%25BE%25E4%25BB%25B6+%25E8%25BD%25AF%25E4%25BB%25B6/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580_9fxw.com/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580/01-HTML%25E8%25B5%2584%25E6%2596%2599/02.HTML-Day02/%25E7%25AC%2594%25E8%25AE%25B0/media/sm.jpg"> </p><h2 id="1-4-图像标签img-重点"><a href="#1-4-图像标签img-重点" class="headerlink" title="1.4 图像标签img (重点)"></a>1.4 图像标签img (重点)</h2><p>单词缩写：   image  图像</p><p>要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img>以及和他相关的属性。（它是一个单身狗）</p><p>语法如下：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"图像URL"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p><img src="/前端笔记/html-day03/BaiduNetdiskDownload/%25E9%25BB%2591%25E9%25A9%25AC/www.fxw.la_%2520WEB%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A8%25E5%25A5%2597%25E8%25A7%2586%25E9%25A2%2591%25E6%2595%2599%25E7%25A8%258B/%25E3%2580%259027%25E3%2580%2591%25E6%25BA%2590%25E7%25A0%2581+%25E8%25AF%25BE%25E4%25BB%25B6+%25E8%25BD%25AF%25E4%25BB%25B6/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580_9fxw.com/01-03%2520%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%25E5%259F%25BA%25E7%25A1%2580/01-HTML%25E8%25B5%2584%25E6%2596%2599/02.HTML-Day02/%25E7%25AC%2594%25E8%25AE%25B0/media/img.png"><p>border 后面我们会用css来做，这里童鞋们就记住这个border 单词就好了</p><p>*<em>注意: *</em></p><ol><li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>任何标签的属性都有默认值，省略该属性则取默认值。</li><li>采取  键值对 的格式   key=”value”  的格式  </li></ol><p>比如:  </p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">正常的<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"cz.jpg"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line">    带有边框的<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"cz.jpg"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"3"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line">有提示文本的<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"cz.jpg"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"这是个小蒲公英"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line">有替换文本的<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"cz.jpg"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"图片不存在"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>此处有练习题</p><p><strong>重点掌握点：</strong></p><ul><li><input disabled type="checkbox"> 请说出 图像标签那个属性是必须要写的？  img  src 图片的路径</li><li><input disabled type="checkbox"> 请说出 图像标签中 alt 和  title 属性区别？ alt 图片显示不出，文字就显示     title 鼠标经过图片的时候显示文字</li></ul><h2 id="1-5-链接标签-重点"><a href="#1-5-链接标签-重点" class="headerlink" title="1.5 链接标签(重点)"></a>1.5 链接标签(重点)</h2><p>单词缩写：  anchor 的缩写  [ˈæŋkə(r)] 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签把文字包括起来就好。</p><p>语法格式：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"跳转目标"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th align="left">作用</th></tr></thead><tbody><tr><td>href</td><td align="left">用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td></tr><tr><td>target</td><td align="left">用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li>外部链接 需要添加 http:// <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></li><li>内部链接 直接链接内部页面名称即可 比如 &lt; a href=”index.html”&gt; 首页 </li><li>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=”#”)，表示该链接暂时为一个空链接。</li><li>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</li></ol><p><strong>重点掌握点：</strong></p><ul><li><input disabled type="checkbox"> 请说出 链接标签那个属性是必须要写的？  href</li><li><input disabled type="checkbox"> 请说出 如何新窗口打开这个一个链接网页的？ target=“_blank”</li></ul><h2 id="1-6-注释标签"><a href="#1-6-注释标签" class="headerlink" title="1.6 注释标签"></a>1.6 注释标签</h2><p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。</p><p>简单解释：</p><p>注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。</p><p>语法格式：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- 注释语句 --&gt;</span>     快捷键是：    ctrl + /       或者 ctrl +shift + /</span><br></pre></td></tr></table></figure><p>注释重要性：</p><p><img src="/前端笔记/html-day03/zs.png" alt></p><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>注释是给人看的，目的是为了更好的解释这部分代码是干啥的， 程序是不执行这个代码的</p></blockquote><h3 id="团队约定"><a href="#团队约定" class="headerlink" title="团队约定"></a>团队约定</h3><p>一般用于简单的描述，如某些状态描述、属性描述等</p><p>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p><p><em>推荐：</em></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Comment Text --&gt;</span><br><span class="line">&lt;div&gt;...&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;...&lt;/div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h1 id="2-路径-重点、难点"><a href="#2-路径-重点、难点" class="headerlink" title="2. 路径(重点、难点)"></a>2. 路径(重点、难点)</h1><p><img src="/前端笔记/html-day03/dt.png" alt></p><p>实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。</p><p>*<em>目录文件夹： *</em></p><p>就是普通文件夹，里面只不过存放了我们做页面所需要的 相关素材，比如 html文件， 图片 等等。</p><p> <img src="/前端笔记/html-day03/g.png" alt></p><p>*<em>根目录 *</em>  </p><p>打开目录文件夹的第一层  就是 根目录 </p><p> <img src="/前端笔记/html-day03/gg.png" alt></p><p>页面中的图片会非常多， 通常我们再新建一个文件夹专门用于存放图像文件（images），这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。路径可以分为： 相对路径和绝对路径</p><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p><table><thead><tr><th>路径分类</th><th align="center">符号</th><th align="left">说明</th></tr></thead><tbody><tr><td>同一级路径</td><td align="center"></td><td align="left">只需输入图像文件的名称即可，如&lt;img src=”baidu.gif” /&gt;。<img src="/前端笔记/html-day03/04%E8%B7%AF%E5%BE%84%E5%90%8C%E7%9B%AE%E5%BD%95.jpg" alt></td></tr><tr><td>下一级路径</td><td align="center">“/”</td><td align="left">图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）                         如&lt;img src=”images/baidu.gif” /&gt;。  <img src="/前端笔记/html-day03/05%E4%B8%8B%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95.jpg" alt></td></tr><tr><td>上一级路径</td><td align="center">“../”</td><td align="left">在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，                    如&lt;img src=”../baidu.gif” /&gt;。 <img src="/前端笔记/html-day03/06%E8%B7%AF%E5%BE%84%E4%B8%8D%E5%90%8C-1589871777153.jpg" alt></td></tr></tbody></table><p>*<em>pink老师 一句话说出他们: *</em></p><blockquote><p>相对路径，是从代码所在的这个文件出发， 去寻找我们的目标文件的，而 我们所说的 上一级 下一级 同一级  简单说，就是 图片 位于 HTML 页面的位置</p></blockquote><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。</p><p>“D:\web\img\logo.gif”，或完整的网络地址，例如“<a href="http://www.itcast.cn/images/logo.gif”。" target="_blank" rel="noopener">http://www.itcast.cn/images/logo.gif”。</a></p><p><strong>注意：</strong></p><p>绝对路径用的较少，我们理解下就可以了。  但是要注意，它的写法 特别是符号  \  并不是 相对路径的   /    </p><h1 id="3-今日总结"><a href="#3-今日总结" class="headerlink" title="3. 今日总结"></a>3. 今日总结</h1><p>  每一天都有一个主题 我们HTML第一天的主题就是 &lt;认识标签&gt;  能用常用标签，写出最简单的页面</p><p>学HTML 之前 觉得 很神秘  </p><p> <img src="/前端笔记/html-day03/z.png" alt></p><p>等你学完之后忽然发现</p><p> <img src="/前端笔记/html-day03/rh.jpg" alt></p><h1 id="5-拓展阅读"><a href="#5-拓展阅读" class="headerlink" title="5. @拓展阅读"></a>5. @拓展阅读</h1><h4 id="5-1-锚点定位-（难点）"><a href="#5-1-锚点定位-（难点）" class="headerlink" title="5.1 锚点定位 （难点）"></a>5.1 锚点定位 （难点）</h4><p>通过创建锚点链接，用户能够快速定位到目标内容。</p><p>创建锚点链接分为两步：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 使用相应的id名标注跳转目标的位置。 (找目标)</span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"two"</span>&gt;</span>第2集<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">2. 使用<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#id名"</span>&gt;</span>链接文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>创建链接文本（被点击的） （拉关系）  我也有一个姓毕的姥爷..</span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#two"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day03/03a%E7%9B%AE%E6%A0%87.jpg" alt></p><p>快速记忆法：</p><p> 好比找个人办事，  首先找到他，然后拉关系，最后看效果。</p><h4 id="5-2-base-标签"><a href="#5-2-base-标签" class="headerlink" title="5.2 base 标签"></a>5.2 base 标签</h4><p><strong>语法：</strong></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day03/base.png" alt></p><p>*<em>总结： *</em></p><ol><li>base 可以设置整体链接的打开状态   </li><li>base 写到  <head><meta name="generator" content="Hexo 3.9.0">  </head>  之间</li><li>把所有的连接 都默认添加 target=”_blank”</li></ol><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>全体链接~ 到 ~  全体集合  所有链接 以新窗口打开页面  ~   是 </p></blockquote><h4 id="5-3-预格式化文本pre标签"><a href="#5-3-预格式化文本pre标签" class="headerlink" title="5.3 预格式化文本pre标签"></a>5.3 预格式化文本pre标签</h4><pre> 标签可定义预格式化的文本。被包围在 <pre> 标签 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。<figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  此例演示如何使用 pre 标签</span><br><span class="line"></span><br><span class="line">  对空行和 空格</span><br><span class="line"></span><br><span class="line">  进行控制</span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>**pink老师 一句话说出他们:**> 所谓的预格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。 有了这个标签，里面的文字，会按照我们书写的模式显示，不需要段落和换行标签了。但是，比较少用，因为不好整体控制。#### 5.4 特殊字符 （理解） 一些特殊的符号，我们再html 里面很难或者 不方便直接 使用， 我们此时可以使用下面的替代代码。![](HTML-Day03/zifu.png)**虽然有很多，但是我们平时用的比较较少， 大家重点记住   空格    大于号 小于号   就可以了，剩下的回来查阅。****总结：**1. 是以**运算符**`&`开头,以**分号运算符**`;`结尾。2. 他们不是标签，而是符号。3. HTML 中不能使用小于号 “<” 和大于号 “>”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体**团队约定**   *推荐：*<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot;&gt;more &amp;gt;&amp;gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>   *不推荐：*<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot;&gt;more &gt;&gt; &lt;/a&gt;</span><br></pre></td></tr></table></figure>#### 5.5 html5发展之路 ![](HTML-Day03/html5.png)#### 5.6 什么是XHTMLXHTML 是更严格更纯净的 HTML 代码。- XHTML 指**可扩展超文本标签语言**（EXtensible HyperText Markup Language）。- XHTML 的目标是取代 HTML。- XHTML 与 HTML 4.01 几乎是相同的。- XHTML 是更严格更纯净的 HTML 版本。- XHTML 是作为一种 XML 应用被重新定义的 HTML。- XHTML 是一个 W3C 标准。#### 5.7 HTML和 XHTML之间有什么区别?- XHTML 指的是可扩展超文本标记语言- XHTML 与 HTML 4.01 几乎是相同的- XHTML 是更严格更纯净的 HTML 版本- XHTML 是以 XML 应用的方式定义的 HTML- XHTML 是 2001 年 1 月发布的 W3C 推荐标准- XHTML 得到所有主流浏览器的支持- XHTML 元素是以 XML 格式编写的 HTML 元素。XHTML是严格版本的HTML，例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。# 6. @深入阅读[HTML5的崛起之路](http://www.chinaz.com/manage/2015/0720/424831.shtml)# 7. 预习内容- 表格标签- 能够通过表格标签能够写出一个简版表格数据展示   例如：   ![](HTML-Day03/qq.png)    可以把你今天学习的内容放在表格内，再次作为总结</”></pre></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.HTML常用标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相对路径三种形式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;排版标签&lt;/li&gt;
&lt;li&gt;文本格式化标签&lt;/li&gt;
&lt;li&gt;图像标签&lt;/li&gt;
&lt;li&gt;链接&lt;/li&gt;
&lt;li&gt;相对路径，绝对路径的使用&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://www.itfool.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML-Day02</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/html-day02/"/>
    <id>http://www.itfool.cn/前端笔记/html-day02/</id>
    <published>2020-05-18T09:06:54.000Z</published>
    <updated>2020-05-18T09:40:39.862Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.认识HTML</p></blockquote><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul><li><p>理解</p><ul><li>HTML标签的概念</li><li>HTML标签的分类</li><li>HTML标签的关系</li><li>HTML标签的语义化</li></ul></li><li><p>应用</p><ul><li>HTML骨架格式</li><li>sublime基本使用<a id="more"></a><h1 id="1-HTML-初识"><a href="#1-HTML-初识" class="headerlink" title="1. HTML 初识"></a>1. HTML 初识</h1></li></ul></li><li><p>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)是用来描述网页的一种语言。</p></li><li><p>H（很）T（甜）M（蜜）L（啦）</p></li><li><p>HTML 不是一种编程语言，而是一种标记语言 (markup language)</p></li><li><p>标记语言是一套标记标签 (markup tag)</p></li></ul><p><strong>所谓超文本，有2层含义：</strong> </p><ol><li>因为它可以加入图片、声音、动画、多媒体等内容（*<em>超越文本限制 *</em>）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（*<em>超级链接文本 *</em>）。</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span> 我是一个大标题 <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>网页是由网页元素组成的 ， 这些元素是利用html标签描述出来，然后通过浏览器解析，就可以显示给用户了。</p></blockquote><p><strong>门外汉眼中的效果页面</strong></p><p><img src="/前端笔记/html-day02/title1.png" alt></p><p><strong>我们要做的html页面</strong></p><p><img src="/前端笔记/html-day02/title.png" alt></p><h2 id="1-1-HTML骨架格式"><a href="#1-1-HTML骨架格式" class="headerlink" title="1.1 HTML骨架格式"></a>1.1 HTML骨架格式</h2><p>日常生活的书信，我们要遵循共同的约定。 </p><p><img src="/前端笔记/html-day02/mess-1589793162385.png" alt></p><p>同理：HTML 有自己的语言语法骨架格式：（要遵循，要专业） 要求务必非常流畅的默写下来。。</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>   </span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>     </span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="html骨架标签总结"><a href="#html骨架标签总结" class="headerlink" title="html骨架标签总结"></a>html骨架标签总结</h4><table><thead><tr><th>标签名</th><th align="center">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td><html></html></td><td align="center">HTML标签</td><td align="left">页面中最大的标签，我们成为  根标签</td></tr><tr><td><head><meta name="generator" content="Hexo 3.9.0"></head></td><td align="center">文档的头部</td><td align="left">注意在head标签中我们必须要设置的标签是title</td></tr><tr><td><titile></titile></td><td align="center">文档的标题</td><td align="left">让页面拥有一个属于自己的网页标题</td></tr><tr><td><body></body></td><td align="center">文档的主体</td><td align="left">元素包含文档的所有内容，页面内容 基本都是放到body里面的</td></tr><tr><td><titile></titile></td><td align="center">文档的标题</td><td align="left">让页面拥有一个属于自己的网页标题</td></tr></tbody></table><p>*<em>课堂练习1： *</em>   </p><p>书写我们的第一个HTML 页面。</p><ol><li><p>新建一个demo 的 TXT 文件。</p></li><li><p>里面写入刚才的HTML 骨架。  </p></li><li><p>把后缀名改为 .HTML。</p></li><li><p>右击–谷歌浏览器打开。</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>   </span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>     </span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>我的第一个页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="line">          黑马洗练  一飞冲天  月薪过万 你我之间 </span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day02/01html%E9%AA%A8%E6%9E%B6.jpg" alt></p></li></ol><p>为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为  猪八戒记忆法</p><p><img src="/前端笔记/html-day02/pig.png" alt></p><h4 id="团队约定大小写"><a href="#团队约定大小写" class="headerlink" title="团队约定大小写"></a>团队约定大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p><p><em>推荐：</em></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;     </span><br><span class="line">        &lt;title&gt;我的第一个页面&lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;HEAD&gt;     </span><br><span class="line">        &lt;TITLE&gt;我的第一个页面&lt;/TITLE&gt;</span><br><span class="line">&lt;/HEAD&gt;</span><br></pre></td></tr></table></figure><h2 id="1-2-HTML元素标签分类"><a href="#1-2-HTML元素标签分类" class="headerlink" title="1.2 HTML元素标签分类"></a>1.2 HTML元素标签分类</h2><p><strong>标签：</strong></p><p>在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;html&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。</p><p><strong>分类：</strong></p><ol><li>常规元素（双标签）</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">标签名</span>&gt;</span> 内容 <span class="hljs-tag">&lt;/<span class="hljs-name">标签名</span>&gt;</span>   比如 <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  我是文字  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。</li><li>和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</li><li>我们以后接触的基本都是双标签</li></ul><ol start="2"><li>空元素（单标签）</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">标签名</span> /&gt;</span>  比如  <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>空元素 用单标签来表示， 简单点说，就是里面不需要包含内容， 只有一个开始标签不需要关闭。</li><li>这种单身狗标签非常少，一共没多少，我们多记忆就好</li></ul><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>世界上单身狗毕竟是少数的， 大部分还是喜欢成双成对，不要拉下你的另外一半，对待一个双标签要有始有终。</p></blockquote><h2 id="1-3-HTML标签关系"><a href="#1-3-HTML标签关系" class="headerlink" title="1.3 HTML标签关系"></a>1.3 HTML标签关系</h2><p>主要针对于<strong>双标签</strong> 的相互关系分为两种：  请大家务必熟悉记住这种标签关系，因为后面我们标签嵌套特别多，很容易弄混他们的关系。</p><ol><li>嵌套关系</li></ol><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  </span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span> </span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day02/father.jpg" alt></p><p>2.并列关系</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day02/xiong.jpg" alt></p><p><strong>倡议：</strong> </p><blockquote><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>html双标签 可以分为  有 一种是 父子级 包含关系的标签      一种是 兄弟级 并列关系的标签</p></blockquote><h2 id="1-4-课堂一练"><a href="#1-4-课堂一练" class="headerlink" title="1.4 课堂一练"></a>1.4 课堂一练</h2><p>*<em>请问下列哪组标签关系是错误的？ *</em></p><ul><li><input disabled type="checkbox"> <head><meta name="generator" content="Hexo 3.9.0"> </head><body> </body></li></ul><ul><li><input disabled type="checkbox"> <div> <strong></strong> </div></li></ul><ul><li><input disabled type="checkbox"> <head><meta name="generator" content="Hexo 3.9.0"> <title></title></head> </li></ul><ul><li><input disabled type="checkbox"> <body> <div></div> </body></li></ul><h1 id="2-代码开发工具（书写代码）"><a href="#2-代码开发工具（书写代码）" class="headerlink" title="2. 代码开发工具（书写代码）"></a>2. 代码开发工具（书写代码）</h1><ul><li><p>为了提高我们的开发效率</p></li><li><p>减少代码的出错我们不提倡用记事本开发，我们有更好的犀利哥。</p><p><img src="/前端笔记/html-day02/s-1589793486979.png" alt></p></li><li><p>Dreamweaver</p></li><li><p>SublimeText</p></li><li><p>WebStorm</p></li><li><p>HBuilder</p></li><li><p>VScode</p></li></ul><p>有人说：</p><p>  普通青年    Dreamweaver</p><p>  文艺青年    sublime</p><p>  高手和傻子  用记事本</p><p>  其实。。。。</p><p>  <img src="/前端笔记/html-day02/node.png" alt></p><p>感觉： 这个feel 倍儿爽 feel feel倍儿爽 爽爽爽爽！</p><p> <img src="/前端笔记/html-day02/shuang.gif" alt></p><p>sublime有非常多的优点， 最开心的就是非常轻量级，打开速度超快，后面更高的功能，后面再接触。</p><p><strong>sublime生成html骨架小技巧</strong></p><ul><li>双击打开软件</li><li>新建文件（ctrl+n）</li><li>保存（ctrl+s）,保存为：文件名.html （ 注意 后缀名必须是 .html ) </li><li>放大缩小代码  ctrl+ 加号 键     和 ctrl +   减号键     或者 按住 ctrl  在 滚动鼠标滚轮</li><li>生成页面骨架结构<ul><li>html: 5    按下tab键    或者  </li><li>!    按下tab键</li></ul></li><li>在浏览器中预览页面<ul><li>右键在  浏览器中打开</li></ul></li></ul><h1 id="3-文档类型-lt-DOCTYPE-gt"><a href="#3-文档类型-lt-DOCTYPE-gt" class="headerlink" title="3. 文档类型&lt;!DOCTYPE&gt;"></a>3. 文档类型&lt;!DOCTYPE&gt;</h1><p>同学你用啥手机？你咋回答？</p><p><strong>用法：</strong></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用：</strong></p><!DOCTYPE><p> 声明位于文档中的最前面的位置，处于 <html> 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。</html></p><p>*<em>注意：  *</em></p><p>一些老网站可能用的还是老版本的文档类型比如 XHTML之类的，但是我们学的是HTML5,而且HTML5的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用HTML5的文档类型就好了。</p><p><strong>pink老师 一句话说出他们:</strong></p>   <!DOCTYPE html><p>  就是告诉浏览器按照HTML5 规范解析页面.</p><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h1 id="4-页面语言lang"><a href="#4-页面语言lang" class="headerlink" title="4. 页面语言lang"></a>4. 页面语言lang</h1><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>  指定html 语言种类</span><br></pre></td></tr></table></figure><p>最常见的2个：</p><ol><li><code>en</code>定义语言为英语</li><li><code>zh-CN</code>定义语言为中文</li></ol><p><strong>pink老师 一句话说出他们:</strong></p><blockquote> <html lang="zh-CN">  指定该html标签 内容 所用的语言为中文</html></blockquote><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 考虑浏览器和操作系统的兼容性，目前仍然使用 zh-CN 属性值</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>@拓展阅读：</strong></p><p>简单来说，可能对于程序来说没有太大的作用，但是它可以告诉浏览器，搜索引擎，一些处理Html的程序对页面语言内容来做一些对应的处理或者事情。<br>比如可以</p><ul><li>根据根据lang属性来设定不同语言的css样式，或者字体</li><li>告诉搜索引擎做精确的识别</li><li>让语法检查程序做语言识别</li><li>帮助翻译工具做识别</li><li>帮助网页阅读程序做识别<br>等等</li></ul><h1 id="5-字符集"><a href="#5-字符集" class="headerlink" title="5. 字符集"></a>5. 字符集</h1><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字符集(Character set)是多个字符的集合。</span><br><span class="line"></span><br><span class="line">计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</span><br></pre></td></tr></table></figure><p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p><ul><li>gb2312 简单中文  包括6763个汉字</li><li>BIG5   繁体中文 港澳台等用</li><li>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</li><li>UTF-8则基本包含全世界所有国家需要用到的字符</li><li><strong>这句代码非常关键， 是必须要写的代码，否则可能引起乱码的情况。</strong></li></ul><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>这句话是让 html 文件是以 UTF-8 编码保存的， 浏览器根据编码去解码对应的html内容。</p></blockquote><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一般情况下统一使用 &quot;UTF-8&quot; 编码, 请尽量统一写成标准的 &quot;UTF-8&quot;，不要写成 &quot;utf-8&quot; 或 &quot;utf8&quot; 或 &quot;UTF8&quot;。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h1 id="6-HTML标签的语义化"><a href="#6-HTML标签的语义化" class="headerlink" title="6. HTML标签的语义化"></a>6. HTML标签的语义化</h1><p>白话： 所谓标签语义化，就是指标签的含义。</p><ol><li>方便代码的阅读和维护</li><li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 </li><li>使用语义化标签会具有更好地搜索引擎优化 </li></ol><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>根据标签的语义，在合适的地方给一个最为合理的标签。</p></blockquote><p><img src="/前端笔记/html-day02/02%E8%AF%AD%E4%B9%89%E5%8C%96.jpg" alt></p><p>语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。(  裸奔起来一样好看 )</p><p>遵循的原则：先确定语义的HTML ，再选合适的CSS。所以，<strong>我们接下来学习html标签，要根据语义去记忆。</strong> HTML网页中任何元素的实现都要依靠HTML标签。</p><h1 id="7-拓展阅读"><a href="#7-拓展阅读" class="headerlink" title="7. 拓展阅读@"></a>7. 拓展阅读@</h1><h2 id="单身狗的由来"><a href="#单身狗的由来" class="headerlink" title="单身狗的由来"></a>单身狗的由来</h2><p>单身狗一词最早是出自网络社区，起源与大话西游有关。</p><p>大话西游之大圣娶亲最后一幕“他好像一条狗”由来。</p><p> <img src="/前端笔记/html-day02/dog.jpg" alt><br> <img src="/前端笔记/html-day02/dog2.jpg" alt><br> <img src="/前端笔记/html-day02/dog3.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.认识HTML&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML标签的概念&lt;/li&gt;
&lt;li&gt;HTML标签的分类&lt;/li&gt;
&lt;li&gt;HTML标签的关系&lt;/li&gt;
&lt;li&gt;HTML标签的语义化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML骨架格式&lt;/li&gt;
&lt;li&gt;sublime基本使用&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://www.itfool.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML-Day01</title>
    <link href="http://www.itfool.cn/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/html-day01/"/>
    <id>http://www.itfool.cn/前端笔记/html-day01/</id>
    <published>2020-05-18T07:39:00.000Z</published>
    <updated>2020-05-18T09:27:00.571Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第01阶段.前端基础.认识WEB</p></blockquote><h1 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h1><p><img src="/前端笔记/html-day01/kec.png" alt></p><a id="more"></a><h1 id="HTML-第一天目标"><a href="#HTML-第一天目标" class="headerlink" title="HTML 第一天目标"></a>HTML 第一天目标</h1><p>  能够写出基本的html页面（里面包含图片、链接、文字等网页元素标签）</p><p><img src="/前端笔记/html-day01/a.png" alt></p><h1 id="认识WEB"><a href="#认识WEB" class="headerlink" title="认识WEB"></a>认识WEB</h1><h2 id="1-认识网页"><a href="#1-认识网页" class="headerlink" title="1. 认识网页"></a>1. 认识网页</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。</span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day01/mi.png" alt></p><p><strong>思考：</strong> </p><p>网页是如何形成的呢?</p><p><img src="../images/HTML-Day01/web.png" alt></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>网页有图片、链接、文字等元素组成，我们后面的任务就是要把这部分网页元素用代码写出来。。。</p><h2 id="2-浏览器（显示代码）"><a href="#2-浏览器（显示代码）" class="headerlink" title="2. 浏览器（显示代码）"></a>2. 浏览器（显示代码）</h2><p><img src="/前端笔记/html-day01/add.png" alt></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><p><img src="/前端笔记/html-day01/b.png" alt></p><p>可能你最熟悉的是 IE浏览器，但是。。。</p><p><img src="/前端笔记/html-day01/liulan.jpg" alt></p><h3 id="2-1-查看浏览器占有的市场份额"><a href="#2-1-查看浏览器占有的市场份额" class="headerlink" title="2.1 查看浏览器占有的市场份额"></a>2.1 查看浏览器占有的市场份额</h3><p>查看网站： <a href="http://tongji.baidu.com/data/browser" target="_blank">http://tongji.baidu.com/data/browser</a></p><p><img src="/前端笔记/html-day01/count.png" alt></p><p> 2008年，大名鼎鼎的互联网巨头Google公司发布了它的首款浏览器Chrome浏览器。   </p><p> 跟王思聪一样，没办法，生下来人家就是富二代官二代啊，后台太强，而且确实先天能力得天独厚。 </p><p><strong>pink老师 一句话说出他们:</strong></p><blockquote><p>出自谷歌，唯我不败；一统江湖，千秋万代。 </p></blockquote><h3 id="2-2-常见浏览器内核（了解）"><a href="#2-2-常见浏览器内核（了解）" class="headerlink" title="2.2 常见浏览器内核（了解）"></a>2.2 常见浏览器内核（了解）</h3><p>首先解释一下浏览器内核是什么东西。英文叫做：Rendering Engine，中文翻译很多，排版引擎、解释引擎、渲染引擎，现在流行称为浏览器内核.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">负责读取网页内容，整理讯息，计算网页的显示方式并显示页面.</span><br></pre></td></tr></table></figure><p>因为浏览器太多啦， 但是现在主要流行的就是下面几个：</p><table><thead><tr><th align="left">浏览器</th><th align="center">内核</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">IE</td><td align="center">Trident</td><td align="left">IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td align="left">firefox</td><td align="center">Gecko</td><td align="left">可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td></tr><tr><td align="left">Safari</td><td align="center">webkit</td><td align="left">现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</td></tr><tr><td align="left">chrome</td><td align="center">Chromium/Blink</td><td align="left">在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td></tr><tr><td align="left">Opera</td><td align="center">blink</td><td align="left">现在跟随chrome用blink内核。</td></tr></tbody></table><p><strong>拓展阅读：</strong></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">移动端的浏览器内核主要说的是系统内置浏览器的内核。</span><br><span class="line"></span><br><span class="line">Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。</span><br><span class="line"></span><br><span class="line">iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的</span><br></pre></td></tr></table></figure><h2 id="3-Web标准（重点）"><a href="#3-Web标准（重点）" class="headerlink" title="3. Web标准（重点）"></a>3. Web标准（重点）</h2><p>目标</p><ul><li>记忆<ul><li>能说出网页 中 web 标准三层组成</li></ul></li><li>理解<ul><li>能结合人来表述web标准三层</li></ul></li></ul><p>Web标准不是某一个标准，而是由W3C组织和其他标准化组织制定的一系列标准的集合。</p><p>W3C 万维网联盟是国际最著名的标准化组织。1994年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。</p><p><strong>w3c就类似于现实世界中的联合国。</strong></p><h3 id="3-1-为什么要遵循WEB标准呢？"><a href="#3-1-为什么要遵循WEB标准呢？" class="headerlink" title="3.1 为什么要遵循WEB标准呢？"></a>3.1 为什么要遵循WEB标准呢？</h3><p> 通过以上浏览器不同内核不同，我们知道他们显示页面或者排版就有些许差异。</p><p><img src="/前端笔记/html-day01/bz.png" alt></p><h3 id="3-2-Web-标准的好处"><a href="#3-2-Web-标准的好处" class="headerlink" title="3.2 Web 标准的好处"></a>3.2 Web 标准的好处</h3><p>遵循web标准可以让不同我们写的页面更标准更统一外，还有许多优点</p><p><em>1</em>、让Web的发展前景更广阔<br><em>2</em>、内容能被更广泛的设备访问<br><em>3</em>、更容易被搜寻引擎搜索<br><em>4</em>、降低网站流量费用<br><em>5</em>、使网站更易于维护<br><em>6</em>、提高页面浏览速度</p><h3 id="3-3-Web-标准构成"><a href="#3-3-Web-标准构成" class="headerlink" title="3.3 Web 标准构成"></a>3.3 Web 标准构成</h3><p><strong>构成：</strong> 主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p><table><thead><tr><th align="left">标准</th><th align="left">说明</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">结构</td><td align="left">结构用于对<strong>网页元素</strong>进行整理和分类，咱们主要学的是HTML。</td><td align="left"><img src="/前端笔记/html-day01/htmll.jpg" alt></td></tr><tr><td align="left">表现</td><td align="left">表现用于设置网页元素的版式、颜色、大小等<strong>外观样式</strong>，主要指的是CSS</td><td align="left"><img src="/前端笔记/html-day01/css.jpg" alt></td></tr><tr><td align="left">行为</td><td align="left">行为是指网页模型的定义及<strong>交互</strong>的编写，咱们主要学的是 Javascript</td><td align="left"><img src="/前端笔记/html-day01/search.gif" alt></td></tr></tbody></table><p> 理想状态我们的源码： .HTML      .css      .js </p><p><strong>结合人来记忆web标准：</strong></p><ul><li>结构标准：  <img src="/前端笔记/html-day01/hb1.png" alt> 是你天然的身体 </li></ul><ul><li>表现标准：   <img src="/前端笔记/html-day01/hb2.png" alt>  决定你是否打扮的美丽外观(衣服？化妆？)</li></ul><ul><li>行为标准：   <img src="/前端笔记/html-day01/hb3.jpg" alt>  决定你是否有吸引人的行为(动作)</li></ul><hr><h3 id="web标准小结"><a href="#web标准小结" class="headerlink" title="web标准小结"></a>web标准小结</h3><ul><li>web标准有三层结构，分别是结构（html）、表现（css）和行为（javascript）  </li><li>结构类似人的身体， 表现类似人的着装， 行为类似人的行为动作</li><li>理想状态下，他们三层都是独立的， 放到不同的文件里面</li></ul><h2 id="4-拓展"><a href="#4-拓展" class="headerlink" title="4. 拓展@"></a>4. 拓展@</h2><ul><li><p><strong>介绍一下你对浏览器内核的理解？常见的浏览器内核有哪些？</strong></p><p>浏览器内核包括两部分，渲染引擎和js引擎。渲染引擎负责读取网页内容，整理讯息，计算网页的显示方式并显示页面，js引擎是解析执行js获取网页的动态效果。 后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。<br>IE：Trident<br>firefox：Gecko<br>chrom、safari：webkit<br>Opera：Presto<br>Microsoft Edge：EdgeHTML</p><p>深度阅读：<a href="http://blog.csdn.net/summer_15/article/details/71249203" target="_blank" rel="noopener">五大主流浏览器内核的源起以及国内各大浏览器内核总结</a> </p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第01阶段.前端基础.认识WEB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;课程安排&quot;&gt;&lt;a href=&quot;#课程安排&quot; class=&quot;headerlink&quot; title=&quot;课程安排&quot;&gt;&lt;/a&gt;课程安排&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/前端笔记/html-day01/kec.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端笔记" scheme="http://www.itfool.cn/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://www.itfool.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.itfool.cn/JavaScript/hello-world/"/>
    <id>http://www.itfool.cn/JavaScript/hello-world/</id>
    <published>2019-10-16T10:07:50.768Z</published>
    <updated>2019-10-13T10:47:01.066Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="hljs-string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.itfool.cn/categories/JavaScript/"/>
    
    
      <category term="hexo" scheme="http://www.itfool.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
